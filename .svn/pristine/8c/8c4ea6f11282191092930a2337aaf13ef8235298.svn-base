using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using 北京工艺文件管理MVC.Models;

namespace 北京工艺文件管理MVC.Controllers
{
    public class CraftDesignController : Controller
    {
        //
        // GET: /CraftDesign/

        public ActionResult Index()
        {
            return View();
        }

        /// <summary>
        /// 根据登录人员获取该人员负责的零件任务
        /// </summary>
        /// <returns></returns>
        public ActionResult GetTaskInfoByCraftPerson()
        {
            try
            {
                int craftPersonID = -1;
                if (int.TryParse(Session["id"].ToString(), out craftPersonID))
                {
                    var list = CraftDesignInfoManage.GetTaskInfoByCreaftPerson(0, "", craftPersonID);
                    return Json(list, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Content("系统异常，请刷新重试！");
                }
            }
            catch (Exception ex)
            {
                return Content(ex.Message);
            }
        }

        /// <summary>
        /// 接收多个任务,返回的是一个字符串列表序列化的字符串，包含每个任务接收情况，成功为ok,失败有错误信息
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public ActionResult AcceptTaskMethodByCraftPerson()
        {
            try
            {
                var taskIdStr = Request["taskIdList"];//接收的任务ID列表,主键ID以英文半角逗号,隔开
                List<string> taskIdStrList = taskIdStr.Split(',').ToList();
                List<int> taskId = new List<int>();
                foreach (var item in taskIdStrList)
                {
                    int _int = -1;
                    if (int.TryParse(item, out _int))
                    {
                        taskId.Add(_int);
                    }
                }
                List<string> result = new List<string>();
                int personId = -1;
                if (int.TryParse(Session["id"].ToString(), out personId))
                {
                    foreach (var item in taskId)
                    {
                        string errMsg = "";
                        if (CraftDesignInfoManage.AcceptTask(item, personId, ref errMsg))
                        {
                            result.Add("ok");
                        }
                        else
                        {
                            result.Add(errMsg);
                        }
                    }
                }
                return Json(result, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Content(ex.Message);
            }
        }




    }
}
