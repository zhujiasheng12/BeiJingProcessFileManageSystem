using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using 北京工艺文件管理MVC.Database;

namespace 北京工艺文件管理MVC.Models
{
    public class TaskInfoManage
    {
        /// <summary>
        /// 根据父节点获取零件信息
        /// </summary>
        /// <param name="parentID">父节点主键ID</param>
        /// <param name="orderNum">父节点的任务号</param>
        /// <returns></returns>
        public static List<TaskInfo> GetPartTaskInfo(int parentID, string orderNum)
        {
            try
            {
                List<TaskInfo> taskInfos = new List<TaskInfo>();
                using (Model1 model = new Model1())
                {
                    var tasks = model.JDJS_PDMS_TaskInfo_Table.Where(r => r.ComponentID == parentID&&r.state =="正常");
                    foreach (var item in tasks)
                    {
                        TaskInfo task = new TaskInfo();
                        task.componentID = parentID;
                        task.acceptTaskTime = item.AcceptTaskTime == null ? DateTime.Now : Convert.ToDateTime(item.AcceptTaskTime);
                        task.acceptTaskTimeStr = item.AcceptTaskTime == null ? "" : item.AcceptTaskTime.ToString().Substring (0,item.AcceptTaskTime .ToString ().LastIndexOf (':'));
                        task.arrangeTaskTime = item.ArrangeTaskTime == null ? DateTime.Now : Convert.ToDateTime(item.ArrangeTaskTime);
                        task.arrangeTaskTimeStr = item.ArrangeTaskTime == null ? "" : item.ArrangeTaskTime.ToString().Substring(0, item.ArrangeTaskTime.ToString().LastIndexOf(':'));
                        task.completeTime = item.CompleteTime == null ? DateTime.Now : Convert.ToDateTime(item.CompleteTime);
                        task.completeTimeStr = item.CompleteTime == null ? "" : item.CompleteTime.ToString().Substring(0, item.CompleteTime.ToString().LastIndexOf(':'));
                        task.craftPersonID =item.CraftPersonID==null?0: Convert.ToInt32(item.CraftPersonID);
                        task.craftPersonName ="";
                        if (item.CraftPersonID != null)
                        {
                            var staff = model.JDJS_PDMS_Staff_Table.Where(r => r.ID == item.CraftPersonID && r.state == "正常").FirstOrDefault();
                            if (staff != null)
                            {
                                task.craftPersonName = staff.StaffName;
                            }
                        }
                        task.creatPersonID = item.CreatPersonID == null ? 0 :Convert .ToInt32 ( item.CreatPersonID);
                        task.creatPersonName = "";
                        if (item.CreatPersonID != null)
                        {
                            var staff = model.JDJS_PDMS_Staff_Table.Where(r => r.ID == item.CreatPersonID && r.state == "正常").FirstOrDefault();
                            if (staff != null)
                            {
                                task.creatPersonName  = staff.StaffName;
                            }
                        }
                        task.creatTime = item.CreatTime == null ? DateTime.Now : Convert.ToDateTime(item.CreatTime);
                        task.creatTimeStr = item.CreatTime == null ? "" : item.CreatTime.ToString().Substring(0, item.CreatTime.ToString().LastIndexOf(':'));
                        task.demandTime = item.DemandTime == null ? DateTime.Now : Convert.ToDateTime(item.DemandTime);
                        task.demandTimeStr = item.DemandTime == null ? "" : item.DemandTime.ToString().Substring(0, item.DemandTime.ToString().LastIndexOf(':'));
                        task.id = item.ID;
                        task.lastAlterPersonID = item.LastAlterPersonID == null ? 0 : Convert.ToInt32(item.LastAlterPersonID);
                        task.lastAlterPersonName = "";
                        if (item.LastAlterPersonID != null)
                        {
                            var staff = model.JDJS_PDMS_Staff_Table.Where(r => r.ID == item.LastAlterPersonID && r.state == "正常").FirstOrDefault();
                            if (staff != null)
                            {
                                task.lastAlterPersonName = staff.StaffName;
                            }
                        }
                        task.lastAlterTime = item.LastAlterTime == null ? DateTime.Now : Convert.ToDateTime(item.LastAlterTime);
                        task.lastAlterTimeStr = item.LastAlterTime == null ? "" : item.LastAlterTime.ToString().Substring(item.LastAlterTime.ToString().LastIndexOf(':'));
                        task.allConponentNum = orderNum + item.TaskNum;
                        task.otherFilePath = item.OtherFilePath == null ? "" : item.OtherFilePath;
                        task.otherFileTime = item.OtherFileTime == null ? DateTime.Now : Convert.ToDateTime(item.OtherFileTime);
                        task.otherFileTimeStr =item.OtherFileTime ==null?"":item.OtherFileTime .ToString ().Substring (0,item.OtherFileTime .ToString ().LastIndexOf (':'));
                        task.planCompletionTime = item.PlanCompletionTime == null ? DateTime.Now : Convert.ToDateTime(item.PlanCompletionTime);
                        task.planCompletionTimeStr = item.PlanCompletionTime == null ? "" : item.PlanCompletionTime.ToString().Substring(0, item.PlanCompletionTime.ToString().LastIndexOf(':'));
                        task.planEndTime = item.PlanEndTime == null ? DateTime.Now : Convert.ToDateTime(item.PlanEndTime);
                        task.planEndTimeStr = item.PlanEndTime == null ? "" : item.PlanEndTime.ToString().Substring(0, item.PlanEndTime.ToString().LastIndexOf(':'));
                        task.planStartTime = item.PlanStartTime == null ? DateTime.Now : Convert.ToDateTime(item.PlanStartTime);
                        task.planStartTimeStr = item.PlanStartTime == null ? "" : item.PlanStartTime.ToString().Substring(0, item.PlanStartTime.ToString().LastIndexOf(':'));
                        task.processCardUploadPath = item.ProcessCardUploadPath == null ? "" : item.ProcessCardUploadPath;
                        task.processCardUploadTime = item.ProcessCardUploadTime == null ? DateTime.Now : Convert.ToDateTime(item.ProcessCardUploadTime);
                        task.processCardUploadTimeStr = item.ProcessCardUploadTime == null ? "" : item.ProcessCardUploadTime.ToString().Substring(0, item.ProcessCardUploadTime.ToString().LastIndexOf(':'));
                        task.processFileUploadPath = item.ProcessFileUploadPath == null ? "" : item.ProcessFileUploadPath;
                        task.processFileUploadTime = item.ProcessFileUploadTime == null ? DateTime.Now : Convert.ToDateTime(item.ProcessFileUploadTime);
                        task.processFileUploadTimeStr = item.ProcessFileUploadTime == null ? "" : item.ProcessFileUploadTime.ToString().Substring(0, item.ProcessFileUploadTime.ToString().LastIndexOf(':'));
                        task.processScheduleUpPath = item.ProcessScheduleUpPath == null ? "" : item.ProcessScheduleUpPath;
                        task.processScheduleUpTime = item.ProcessScheduleUpTime == null ? DateTime.Now : Convert.ToDateTime(item.ProcessScheduleUpTime);
                        task.processScheduleUpTimeStr = item.ProcessScheduleUpTime == null ? "" : item.ProcessScheduleUpTime.ToString().Substring(0, item.ProcessScheduleUpTime.ToString().LastIndexOf(':'));
                        task.programFileUploadPath = item.ProgramFileUploadPath == null ? "" : item.ProgramFileUploadPath;
                        task.programFileUploadTime = item.ProgramFileUploadTime == null ? DateTime.Now : Convert.ToDateTime(item.ProgramFileUploadTime);
                        task.programFileUploadTimeStr = item.ProgramFileUploadTime == null ? "" : item.ProgramFileUploadTime.ToString().Substring(0, item.ProgramFileUploadTime.ToString().LastIndexOf(':'));
                        task.staffID = item.staffID == null ? 0 : Convert.ToInt32(item.staffID);
                        task.staffName = "";
                        if (item.staffID != null)
                        {
                            var staff = model.JDJS_PDMS_Staff_Table.Where(r => r.ID == item.staffID && r.state == "正常").FirstOrDefault();
                            if (staff != null)
                            {
                                task.staffName = staff.StaffName;
                            }
                        }
                        task.state = item.state;
                        task.taskName = item.TaskName;
                        task.taskNum = item.TaskNum;
                        task.taskState = item.TaskState == null ? 0 : Convert.ToInt32(item.TaskState);
                        task.version = item.Version == null ? 0 : Convert.ToInt32(item.Version);
                        switch (task.taskState)
                        {
                            case 0:
                                task.taskStateStr  = "待完成";
                                break;
                            case 1:
                                task.taskStateStr = "待完成";
                                break;
                            case 2:
                                task.taskStateStr= "待完成";
                                break;
                            case 3:
                                task.taskStateStr = "待完成";
                                break;
                            case 4:
                                task.taskStateStr = "已完成";
                                break;
                            case 5:
                                break;
                            case 6:
                                break;
                            case 7:
                                break;
                            case 8:
                                break;
                            default:
                                break;

                        }
                        task.previewCategory = new List<int>();
                        var types = model.JDJS_PDMS_Task_ProcessType_Table.Where(r => r.TaskID == item.ID&&r.state =="正常");
                        foreach (var type in types)
                        {
                            task.previewCategory.Add(Convert.ToInt32(type.CategoryTypeID));
                        }
                        task.previewCategoryStr = "";
                        foreach (var type in task.previewCategory)
                        {
                            var jd = model.JDJS_PDMS_Task_Preview_Category_Table.Where(r => r.ID == type && r.state == "正常").FirstOrDefault();
                            if (jd != null)
                            {
                                task.previewCategoryStr += jd.ProcessingType + ",";
                            }
                        }
                        if(task.previewCategoryStr .Length>0)
                        {
                        task.previewCategoryStr = task.previewCategoryStr.Substring(0, task.previewCategoryStr.Length - 1);
                        }


                        taskInfos.Add(task);


                    }
                }
                return taskInfos;
            }
            catch (Exception ex)
            {
                return null;
            }

        }
    }

    public class TaskInfo
    {
        /// <summary>
        /// 主键ID
        /// </summary>
        public int id { get; set; }
        /// <summary>
        /// 父节点ID
        /// </summary>
        public int componentID { get; set; }
        /// <summary>
        /// 任务编号
        /// </summary>
        public string taskNum { get; set; }
        /// <summary>
        /// 任务名称
        /// </summary>
        public string taskName { get; set; }
        /// <summary>
        /// 责任人名称
        /// </summary>
        public string staffName { get; set; }
        /// <summary>
        /// 责任人主键ID
        /// </summary>
        public int staffID { get; set; }
        /// <summary>
        /// 版本号
        /// </summary>
        public int version { get; set; }
        /// <summary>
        /// 全部任务编号
        /// </summary>
        public string allConponentNum { get; set; }
        /// <summary>
        /// 计划开始时间
        /// </summary>
        public string planStartTimeStr { get; set; }
        public DateTime planStartTime { get; set; }
        /// <summary>
        /// 计划结束时间
        /// </summary>
        public string planEndTimeStr { get; set; }
        public DateTime planEndTime { get; set; }
        /// <summary>
        /// 需求时间
        /// </summary>
        public string demandTimeStr { get; set; }
        public DateTime demandTime { get; set; }
        /// <summary>
        /// 工艺责任人名称
        /// </summary>
        public string craftPersonName { get; set; }
        public int craftPersonID { get; set; }
        /// <summary>
        /// 安排任务时间
        /// </summary>
        public string arrangeTaskTimeStr { get; set; }
        public DateTime arrangeTaskTime { get; set; }
        /// <summary>
        /// 接收任务时间
        /// </summary>
        public string acceptTaskTimeStr { get; set; }
        public DateTime acceptTaskTime { get; set; }

        public string planCompletionTimeStr { get; set; }
        public DateTime planCompletionTime { get; set; }
        /// <summary>
        /// 工艺过程卡
        /// </summary>
        public string processCardUploadTimeStr { get; set; }
        public DateTime processCardUploadTime { get; set; }
        public string processCardUploadPath { get; set; }
        /// <summary>
        /// 进程单
        /// </summary>
        public string processScheduleUpTimeStr { get; set; }
        public DateTime processScheduleUpTime { get; set; }
        public string processScheduleUpPath { get; set; }
        /// <summary>
        /// 编程文件
        /// </summary>
        public string programFileUploadTimeStr { get; set; }
        public DateTime programFileUploadTime { get; set; }
        public string programFileUploadPath { get; set; }
        /// <summary>
        /// 加工文件
        /// </summary>
        public string processFileUploadTimeStr { get; set; }
        public DateTime processFileUploadTime { get; set; }
        public string processFileUploadPath { get; set; }
        /// <summary>
        /// 刀具文件
        /// </summary>
        public string otherFileTimeStr { get; set; }
        public DateTime otherFileTime { get; set; }
        public string otherFilePath { get; set; }
        /// <summary>
        /// 完成时间
        /// </summary>
        public string completeTimeStr { get; set; }
        public DateTime completeTime { get; set; }
        /// <summary>
        /// 任务状态
        /// </summary>
        public string taskStateStr { get; set; }
        public int taskState { get; set; }

        /// <summary>
        /// 创建时间
        /// </summary>
        public string creatTimeStr { get; set; }
        public DateTime creatTime { get; set; }
        /// <summary>
        /// 创建人员
        /// </summary>
        public string creatPersonName { get; set; }
        public int creatPersonID { get; set; }
        /// <summary>
        /// 最终修改时间
        /// </summary>
        public string lastAlterTimeStr { get; set; }
        public DateTime lastAlterTime { get; set; }
        /// <summary>
        /// 最终修改人员
        /// </summary>
        public string lastAlterPersonName { get; set; }
        public int lastAlterPersonID { get; set; }
        /// <summary>
        /// 该条记录状态
        /// </summary>
        public string state { get; set; }



        public List<CompontInfo> listCompontInfos { get; set; }
        public List<TaskInfo> taskInfos { get; set; }
        /// <summary>
        /// 预览组别主键ID
        /// </summary>
        public List<int> previewCategory { get; set; }
        /// <summary>
        /// 预览组别
        /// </summary>
        public string previewCategoryStr { get; set; }












   
    }
}